<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.newpath</string>
	<key>connections</key>
	<dict>
		<key>05CA330B-6091-4733-879B-AD6F4C084CF6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BFDDAA43-73BB-48F4-A58E-EC4B60B6D378</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>137E4749-7D83-426A-A8C4-AB736358775E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>9954B863-DC31-488D-8184-2568AC55AE82</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>22E5ACE0-2434-43F3-A5AA-F146F8B1C17A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5825BBA9-284E-4E11-8D52-5A2F11963D35</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4DFABBFF-CA31-4D8F-B0BA-988B14A2803F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C6E51C83-BFBF-456C-8778-9D6F8B2B9698</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5627883C-8996-495B-9FCB-4C76F7784ACA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B53BB7F7-3EBA-4B88-98B4-0280DF11618C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5825BBA9-284E-4E11-8D52-5A2F11963D35</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CE197CC2-6503-418E-88F7-6DCBB4F9DB2C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6CD95C53-76C7-41A5-A2B7-5E827AA56CF9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BFDDAA43-73BB-48F4-A58E-EC4B60B6D378</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9954B863-DC31-488D-8184-2568AC55AE82</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5825BBA9-284E-4E11-8D52-5A2F11963D35</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9C371C5D-4983-4C19-A61B-A5CF72ED12E0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5825BBA9-284E-4E11-8D52-5A2F11963D35</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B53BB7F7-3EBA-4B88-98B4-0280DF11618C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5825BBA9-284E-4E11-8D52-5A2F11963D35</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>BCD60D9B-7860-4386-8EAA-173800820C30</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>9C371C5D-4983-4C19-A61B-A5CF72ED12E0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C6E51C83-BFBF-456C-8778-9D6F8B2B9698</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6CD95C53-76C7-41A5-A2B7-5E827AA56CF9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>F686D9C5-B812-4033-9DFA-6F038C6EFE22</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>05CA330B-6091-4733-879B-AD6F4C084CF6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CE197CC2-6503-418E-88F7-6DCBB4F9DB2C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4DFABBFF-CA31-4D8F-B0BA-988B14A2803F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D03807E1-1B7E-4FBD-B4C0-877B87E2AB86</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>22E5ACE0-2434-43F3-A5AA-F146F8B1C17A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Creates new files or directories in the current Finder directory</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>NewPath</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>touch</string>
				<key>subtext</key>
				<string>Separate multiple names with `|` (if no extension is given, `.txt` will be used)</string>
				<key>text</key>
				<string>Create new files</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>D03807E1-1B7E-4FBD-B4C0-877B87E2AB86</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>files_query</key>
					<string>{query}</string>
					<key>open_files</key>
					<string>false</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>22E5ACE0-2434-43F3-A5AA-F146F8B1C17A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>require 'fileutils'
require 'pathname'

target_dir = Pathname.new(ENV['target_dir'])
all_paths = ENV['files_query'].split('|').map { |p| Pathname.new(p.strip) }

all_paths.each do |file_path|
  new_path = if file_path.extname.empty?
               target_dir.join("#{file_path}.txt")
             else
               target_dir.join(file_path)
             end

  FileUtils.touch(new_path)
  system('open', new_path.to_path) if ENV['open_files'] == 'true'
end</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>6CD95C53-76C7-41A5-A2B7-5E827AA56CF9</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>toucho</string>
				<key>subtext</key>
				<string>Separate multiple names with `|` (if no extension is given, `.txt` will be used)</string>
				<key>text</key>
				<string>Create and open new file(s)</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>137E4749-7D83-426A-A8C4-AB736358775E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>files_query</key>
					<string>{query}</string>
					<key>open_files</key>
					<string>true</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>9954B863-DC31-488D-8184-2568AC55AE82</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>const frontmost_app_name = Application("System Events").applicationProcesses.where({ frontmost: true }).name()[0]

if (frontmost_app_name === "Finder") {
  decodeURIComponent(Application("Finder").insertionLocation().url()).slice(7).slice(0, -1)
} else if(frontmost_app_name === "Path Finder") {
  decodeURIComponent(Application("Path Finder").finderWindows[0].target.url()).slice(7).slice(0, -1)
} else {
  decodeURIComponent(Application("Finder").desktop.url()).slice(7).slice(0, -1)
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>5825BBA9-284E-4E11-8D52-5A2F11963D35</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>BFDDAA43-73BB-48F4-A58E-EC4B60B6D378</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{var:files_query}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>.+</string>
						<key>outputlabel</key>
						<string>Files</string>
						<key>uid</key>
						<string>F686D9C5-B812-4033-9DFA-6F038C6EFE22</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>Directories</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>C6E51C83-BFBF-456C-8778-9D6F8B2B9698</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>target_dir</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>4DFABBFF-CA31-4D8F-B0BA-988B14A2803F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.transform</string>
			<key>uid</key>
			<string>CE197CC2-6503-418E-88F7-6DCBB4F9DB2C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>mkdir</string>
				<key>subtext</key>
				<string>Separate multiple names with `|` (use `/` for subdirectories)</string>
				<key>text</key>
				<string>Create new directories</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>5627883C-8996-495B-9FCB-4C76F7784ACA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>dirs_query</key>
					<string>{query}</string>
					<key>open_dirs</key>
					<string>false</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>B53BB7F7-3EBA-4B88-98B4-0280DF11618C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>require 'pathname'

target_dir = Pathname.new(ENV['target_dir'])
all_paths = ENV['dirs_query'].split('|').map { |p| Pathname.new(p.strip) }

all_paths.each do |dir_path|
  new_path = target_dir.join(dir_path)
  new_path.mkpath
  system('open', new_path.to_path) if ENV['open_dirs'] == 'true'
end</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>05CA330B-6091-4733-879B-AD6F4C084CF6</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>mkdiro</string>
				<key>subtext</key>
				<string>Separate multiple names with `|` (use `/` for subdirectories)</string>
				<key>text</key>
				<string>Create and open new directories</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>BCD60D9B-7860-4386-8EAA-173800820C30</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>dirs_query</key>
					<string>{query}</string>
					<key>open_dirs</key>
					<string>true</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>9C371C5D-4983-4C19-A61B-A5CF72ED12E0</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `nf` followed by a file name (if no extension is given, `.txt` will be used) to make a new file. Calling `nfo` instead will open the files after creation.

`nd` and `ndo` behave similarly, but for directories. Two important diferences: no extension is added, and subdirectories can be created with `/`.

If a Finder or Path Finder window is the frontmost window, the new paths will be created there, otherwise they will be created on the Desktop. Use `|` to separate the names of multiple entries (surrounding spaces will be trimmed).

![](https://i.imgur.com/cDBBQG3.png)
![](https://i.imgur.com/qAXwk5d.png)</string>
	<key>uidata</key>
	<dict>
		<key>05CA330B-6091-4733-879B-AD6F4C084CF6</key>
		<dict>
			<key>xpos</key>
			<integer>795</integer>
			<key>ypos</key>
			<integer>305</integer>
		</dict>
		<key>137E4749-7D83-426A-A8C4-AB736358775E</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>140</integer>
		</dict>
		<key>22E5ACE0-2434-43F3-A5AA-F146F8B1C17A</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>4DFABBFF-CA31-4D8F-B0BA-988B14A2803F</key>
		<dict>
			<key>xpos</key>
			<integer>590</integer>
			<key>ypos</key>
			<integer>225</integer>
		</dict>
		<key>5627883C-8996-495B-9FCB-4C76F7784ACA</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>265</integer>
		</dict>
		<key>5825BBA9-284E-4E11-8D52-5A2F11963D35</key>
		<dict>
			<key>note</key>
			<string>Grab frontmost directory</string>
			<key>xpos</key>
			<integer>355</integer>
			<key>ypos</key>
			<integer>195</integer>
		</dict>
		<key>6CD95C53-76C7-41A5-A2B7-5E827AA56CF9</key>
		<dict>
			<key>xpos</key>
			<integer>795</integer>
			<key>ypos</key>
			<integer>85</integer>
		</dict>
		<key>9954B863-DC31-488D-8184-2568AC55AE82</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
		<key>9C371C5D-4983-4C19-A61B-A5CF72ED12E0</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>425</integer>
		</dict>
		<key>B53BB7F7-3EBA-4B88-98B4-0280DF11618C</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>295</integer>
		</dict>
		<key>BCD60D9B-7860-4386-8EAA-173800820C30</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>395</integer>
		</dict>
		<key>BFDDAA43-73BB-48F4-A58E-EC4B60B6D378</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>965</integer>
			<key>ypos</key>
			<integer>195</integer>
		</dict>
		<key>C6E51C83-BFBF-456C-8778-9D6F8B2B9698</key>
		<dict>
			<key>xpos</key>
			<integer>670</integer>
			<key>ypos</key>
			<integer>215</integer>
		</dict>
		<key>CE197CC2-6503-418E-88F7-6DCBB4F9DB2C</key>
		<dict>
			<key>xpos</key>
			<integer>510</integer>
			<key>ypos</key>
			<integer>225</integer>
		</dict>
		<key>D03807E1-1B7E-4FBD-B4C0-877B87E2AB86</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>21.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
